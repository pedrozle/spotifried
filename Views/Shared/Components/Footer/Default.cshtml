@model AudioModel?


@* <footer
class="text-white bg-[#121212] flex flex-col justify-center gap-2 sm:flex-row h-20 w-full shrink-0 items-center px-4
md:px-6 border-t">
<p class="text-xs text-muted-foreground">Â© 2024 Spotifried. Todos os direitos reservados.</p>
<nav class="sm:ml-auto flex gap-4 sm:gap-6">

<a class="text-xs hover:underline underline-offset-4 text-muted-foreground" asp-area="" asp-controller="Login"
asp-action="Privacy">
Privacy Policy
</a>
</nav>
</footer> *@


<footer
    class="text-white bg-[#121212] flex flex-col justify-center text-white px-4 h-24 sm:px-6 md:px-8 fixed bottom-0 w-full">
    <audio id="audioReprodutor" controls style="display: none;">
        Your browser does not support the audio element.
    </audio>
    <div class="flex flex-row gap-2 items-center justify-center">
        <div class="flex items-center space-x-4 w-[20%] ">
            @if (Model is not null)
            {
                <img src="@Model.Cover" width="75" height="75" alt="Album Cover"
                    class="aspect-square rounded-md object-cover" />
                <div>
                    <a class="text-sm font-medium block" asp-controller="Music" asp-action="Music"
                        asp-route-itemid="">@Model.Title</a>
                    <a class="text-sm text-muted-foreground text-gray-400" asp-controller="Music" asp-action="Artist"
                        asp-route-itemid="">@Model.Artist</a>
                </div>
            }
            @if (Model is null)
            {
                <img src="https://placehold.co/150x150?text=no music playing" width="50" height="50" alt="Album Cover"
                    class="aspect-square rounded-md object-cover" />
                <p>--:--</p>
            }
        </div>
        <div class="flex flex-col items-center w-[60%] ">
            <div class="flex flex-row gap-1 mb-2">
                <button class="btn w-[45px] text-white hover:bg-[#1DB954] rounded-lg"><i
                        class="fa fa-random"></i></button>
                <button class="btn w-[45px] text-white hover:bg-[#1DB954] rounded-lg"><i
                        class="fa fa-step-backward"></i></button>
                <button class="btn w-[45px] text-white hover:bg-[#1DB954] rounded-lg"><i
                        class="fa fa-play"></i></button>
                <button class="btn w-[45px] text-white hover:bg-[#1DB954] rounded-lg"><i
                        class="fa fa-step-forward"></i></button>
                <button class="btn w-[45px] text-white hover:bg-[#1DB954] rounded-lg"><i
                        class="fa fa-repeat"></i></button>
            </div>
            <div class="flex flex-row w-full gap-3 items-center">
                <p>0:00</p>
                <div class="bg-gray-500 rounded-full flex flex-row relative w-full h-2 cursor-pointer" id="slider">
                    <div class="bg-[#1DB954] h-full rounded-full" id="progress"></div>
                    <div class="p-[7px] rounded-full bg-[#1DB954] border-[#148D3E] border-2 w-4 h-4 absolute top-1/2 transform -translate-y-1/2 -translate-x-1/2 slider-thumb"
                        id="thumb"></div>
                </div>
                <p>3:45</p>
            </div>
        </div>
        <div class="flex flex-row gap-1 items-center mb-2 w-[10%] ">
            <button class="btn w-[45px] text-white hover:bg-[#1DB954] rounded-lg"><i
                    class="fa fa-volume-off"></i></button>
            <div class="w-full">
                <div class="bg-gray-500 rounded-full flex flex-row relative h-2 cursor-pointer" id="sliderVolume">
                    <div class="bg-[#1DB954] h-full rounded-full" id="progressVolume"></div>
                    <div class="p-[7px] rounded-full bg-[#1DB954] border-[#148D3E] border-2 w-4 h-4 absolute top-1/2 transform -translate-y-1/2 -translate-x-1/2 slider-thumb-volume"
                        id="thumbVolume"></div>
                </div>
            </div>
        </div>
    </div>
</footer>

<script>
    const slider = document.getElementById('slider');
    const progress = document.getElementById('progress');
    const thumb = document.getElementById('thumb');

    slider.addEventListener('mousedown', (e) => {
        updateSlider(e);
        document.addEventListener('mousemove', updateSlider);
        document.addEventListener('mouseup', stopSliderUpdate);
    });

    function updateSlider(e) {
        const rect = slider.getBoundingClientRect();
        const offsetX = e.clientX - rect.left;
        const percentage = Math.min(Math.max(offsetX / rect.width, 0), 1) * 100;
        progress.style.width = `${percentage}%`;
        thumb.style.left = `${percentage}%`;
    }

    function stopSliderUpdate() {
        document.removeEventListener('mousemove', updateSlider);
        document.removeEventListener('mouseup', stopSliderUpdate);
    }

    const sliderVolume = document.getElementById('sliderVolume');
    const progressVolume = document.getElementById('progressVolume');
    const thumbVolume = document.getElementById('thumbVolume');

    sliderVolume.addEventListener('mousedown', (e) => {
        updateSliderVolume(e);
        document.addEventListener('mousemove', updateSliderVolume);
        document.addEventListener('mouseup', stopSliderUpdateVolume);
    });

    function updateSliderVolume(e) {
        const rect = sliderVolume.getBoundingClientRect();
        const offsetX = e.clientX - rect.left;
        const percentage = Math.min(Math.max(offsetX / rect.width, 0), 1) * 100;
        progressVolume.style.width = `${percentage}%`;
        thumbVolume.style.left = `${percentage}%`;
    }

    function stopSliderUpdateVolume() {
        document.removeEventListener('mousemove', updateSliderVolume);
        document.removeEventListener('mouseup', stopSliderUpdateVolume);
    }

</script>